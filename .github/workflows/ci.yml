name: CI

on:
    push:
        branches:
            - '**'
    pull_request:
        branches:
            - '**'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Use Node.js 16.x
              uses: actions/setup-node@v3
              with:
                  node-version: '16.x'
            - name: Install dependencies
              run: npm ci
            - name: Check source code
              run: |
                  npm run lint
                  npm run copy:paste:detector
            - name: Compile source code
              run: npm run compile
            - name: Run unit tests
              run: npm run test:unit:coverage
            - name: Get Date
              id: get-date
              run: |
                  echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
            - name: Cache Gatsby directories
              id: gatsby-cache-build
              uses: actions/cache@v2
              with:
                  path: |
                      .netlify
                  key: ${{ runner.os }}-gatsby-cache-${{ steps.get-date.outputs.date }}
            #             - name: Build application for visual regression and e2e tests
            #               run: npm run build:visual
            #               env:
            #                   GITHUB_API_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
            - name: Run e2e tests
              continue-on-error: true
              run: npm run test:e2e:ci
              env:
                  BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
                  BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
                  BROWSERSTACK_BUILD_ID: ${{ github.run_id }}
                  BROWSERSTACK_PROJECT_NAME: ${{ secrets.BROWSERSTACK_PROJECT_NAME }}
            #             - name: Run visual regression tests
            #               run: npm run test:visual
            #               env:
            #                   PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
            #             - name: Build application for production
            #               run: npm run build
            #               env:
            #                   GITHUB_API_TOKEN: ${{ secrets.GITHUB_API_TOKEN }}
            - name: Deploy branch to Netlify
              run: npx netlify deploy --build --skip-functions-cache --message "Deploy from GitHub Actions" --alias ${{ github.ref_name }}
              if: github.ref != 'refs/heads/main'
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            - name: Deploy to Netlify production
              run: npx netlify deploy --build --skip-functions-cache --message "Deploy from GitHub Actions" --prod
              if: github.ref == 'refs/heads/main'
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            #             - name: Audit URLs using Lighthouse
            #               uses: treosh/lighthouse-ci-action@v7
            #               continue-on-error: true
            #               with:
            #                   urls: |
            #                       ${{ steps.deploy-to-netlify.outputs.deploy-url }}
            #                   temporaryPublicStorage: true
            #             - name: Run accessibility tests
            #               run: npm run test:a11y -- ${{ steps.deploy-to-netlify.outputs.deploy-url }}
            - name: Upload code coverage to Codecov
              uses: codecov/codecov-action@v2
              with:
                  token: ${{secrets.CODECOV_TOKEN}}
                  file: target/coverage/clover.xml
