name: Main

on: [push]

jobs:
    tests:
        name: Tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Setup Node.js
              uses: ./.github/actions/setup-nodejs
            - name: Check source code
              run: |
                  npm run lint
                  npm run copy:paste:detector
            - name: Compile source code
              run: npm run compile
            - name: Run unit tests
              run: npm run test:unit:coverage
            - name: Upload code coverage artifact
              uses: actions/upload-artifact@v3
              with:
                  name: code-coverage
                  path: target/coverage/clover.xml
                  retention-days: 1
                  if-no-files-found: error

    end-to-end-tests:
        name: End-to-End tests
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Setup Node.js
              uses: ./.github/actions/setup-nodejs
            - name: Build for production
              run: npm run build
              env:
                  GATSBY_GITHUB_API_BASE_URL: http://localhost:3000
                  GATSBY_GITHUB_LOGIN: foo
                  GATSBY_GITHUB_API_TOKEN: test-token
                  GATSBY_CONTACT_FORM_URL: http://localhost:3000/contact-form
            - name: Run end-to-end tests
              run: npm run test:e2e:ci
              env:
                  BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
                  BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
                  BROWSERSTACK_BUILD_ID: ${{ github.run_id }}
                  BROWSERSTACK_PROJECT_NAME: ${{ secrets.BROWSERSTACK_PROJECT_NAME }}

    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Setup Node.js
              uses: ./.github/actions/setup-nodejs
            - name: Get Date
              id: get-date
              run: |
                  echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
            - name: Cache Gatsby directories
              id: gatsby-cache-build
              uses: actions/cache@v2
              with:
                  path: |
                      .netlify
                  key: ${{ runner.os }}-gatsby-cache-${{ steps.get-date.outputs.date }}
            - name: Build for Netlify
              run: npx netlify build --offline
            - name: Upload build output artifact
              uses: actions/upload-artifact@v3
              with:
                  name: netlify-gatsby-build
                  path: |
                      .netlify
                      public
                  retention-days: 1
                  if-no-files-found: error

    accessibility-tests:
        name: Accessibility tests
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Setup Node.js
              uses: ./.github/actions/setup-nodejs
            - name: Download build output artifact
              uses: actions/download-artifact@v3
              with:
                  name: netlify-gatsby-build
            - run: npm run test:a11y

    deploy-to-netlify:
        name: Deploy to Netlify
        runs-on: ubuntu-latest
        needs: [tests, end-to-end-tests, build, accessibility-tests]
        outputs:
            deploy-url: ${{ steps.netlify-production.outputs.deploy-url || steps.netlify-branch.outputs.deploy-url }}
        env:
            NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
            NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
            GATSBY_GITHUB_API_BASE_URL: ${{ secrets.GATSBY_GITHUB_API_BASE_URL }}
            GATSBY_GITHUB_API_TOKEN: ${{ secrets.GATSBY_GITHUB_API_TOKEN }}
            GATSBY_GITHUB_LOGIN: ${{ secrets.GATSBY_GITHUB_LOGIN }}
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Setup Node.js
              uses: ./.github/actions/setup-nodejs
            - name: Download build output artifact
              uses: actions/download-artifact@v3
              with:
                  name: netlify-gatsby-build
            - name: Deploy to Netlify
              id: netlify-production
              if: github.ref == 'refs/heads/main'
              run: |
                  url=$( npx netlify deploy --build --json --message "Deploy from GitHub Actions" --prod | jq '.deploy_url' )
                  echo "::set-output name=deploy-url::$url"
            - name: Deploy branch to Netlify
              id: netlify-branch
              if: github.ref != 'refs/heads/main'
              run: |
                  url=$( npx netlify deploy --build --json --message "Deploy from GitHub Actions" --alias ${{ github.ref_name }} | jq '.deploy_url' )
                  echo "::set-output name=deploy-url::$url"

    lighthouse-audit:
        name: Lighthouse audit
        runs-on: ubuntu-latest
        needs: deploy-to-netlify
        steps:
            - name: Checkout code
              uses: nschloe/action-cached-lfs-checkout@v1
            - name: Audit URLs using Lighthouse
              uses: treosh/lighthouse-ci-action@v7
              with:
                  urls: |
                      ${{ needs.deploy-to-netlify.outputs.deploy-url }}
                  temporaryPublicStorage: true

    coverage:
        name: Upload code coverage
        runs-on: ubuntu-latest
        needs: deploy-to-netlify
        steps:
            - name: Download code coverage artifact
              uses: actions/download-artifact@v3
              with:
                  name: code-coverage
            - name: Upload code coverage
              uses: codecov/codecov-action@v2
              with:
                  token: ${{secrets.CODECOV_TOKEN}}
                  file: target/coverage/clover.xml
