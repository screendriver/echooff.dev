---
import { icons } from "feather-icons";
import { parseResumeData } from "./data-schema";
import resumeDate from "./resumeData.json";
import { formatSinceDate } from "./date";

const parsedResumeResult = parseResumeData(resumeDate);

if (parsedResumeResult.isErr) {
	throw new Error(parsedResumeResult.error);
}

const resume = parsedResumeResult.value;
---

<section>
	<h3>
		Resume
		<Fragment set:html={icons["file-text"]?.toSvg()} />
	</h3>

	<hr />

	<ol>
		{
			resume.map((job) => {
				const sinceDateFormatted = formatSinceDate(job.since, job.showOnlyYear);

				return sinceDateFormatted.mapOr(null, (sinceDate) => {
					return (
						<li>
							<p>{sinceDate}</p>

							<div class="timeline-marker" />

							<div class="job-details">
								<h3>{job.jobTitle}</h3>

								<h4>
									<a href={job.company.url}>{job.company.name}</a>

									<span> ({job.industry})</span>
								</h4>

								<p>{job.jobDescription}</p>
							</div>
						</li>
					);
				});
			})
		}
	</ol>
</section>

<style lang="scss">
	@use "../styles/variables";
	@use "../styles/mixins";

	section {
		padding: 1rem;

		@media (min-width: variables.$large-width) {
			padding: 2.5rem;
		}
	}

	section > h3 {
		@include mixins.heading;

		:global(svg) {
			@include mixins.heading-icon;
		}
	}

	hr {
		@include mixins.divider;
	}

	ol {
		margin: 0 auto;
		width: 80%;

		@media (min-width: 640px) {
			padding-top: 1rem;
		}
	}

	li {
		position: relative;
		padding-left: 2.5rem;
		display: block;

		@media (min-width: variables.$medium-width) {
			display: grid;
			grid-template-columns: 0.5fr auto 1fr;
			justify-content: space-between;
			justify-items: start;
			gap: 1.75rem;
			padding-left: 0;
		}
	}

	li > p {
		color: variables.$green;
		margin-bottom: 0.25rem;
		font-size: 0.75rem;
		letter-spacing: 0.25em;
		text-transform: uppercase;
		line-height: 1rem;

		@media (min-width: variables.$medium-width) {
			justify-self: end;
		}
	}

	.timeline-marker {
		position: absolute;
		top: 0.25rem;
		bottom: 0;
		left: 0;

		&::before {
			content: "";
			display: block;
			height: 1rem;
			width: 1rem;
			border-radius: 9999px;
			border: 3px solid variables.$orange;
			background-color: variables.$orange;
			transition: background-color 0.3s ease-in-out;
		}

		&::after {
			content: "";
			position: absolute;
			top: 1.5rem;
			bottom: 0.25rem;
			left: 0.375rem;
			display: block;
			width: 0.25rem;
			background-color: variables.$comment;
		}

		.resume-item:last-child &::after {
			display: none;
		}

		@media (min-width: variables.$medium-width) {
			position: relative;

			&::after {
				bottom: 0.5rem;
			}
		}

		.resume-item:hover &::before {
			background-color: transparent;
		}
	}

	.job-details {
		padding-bottom: 2.5rem;

		h3 {
			font-size: 1.125rem;
			line-height: 1;
		}

		h4 {
			color: variables.$green;

			a {
				color: inherit;
				transition: color 0.1s ease-in-out;

				&:hover {
					color: variables.$purple;
				}
			}

			span {
				color: variables.$comment;
			}
		}

		p {
			font-size: 0.875rem;
			line-height: 1.25rem;
		}
	}
</style>
