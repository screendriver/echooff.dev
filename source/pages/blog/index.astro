---
import { icons } from "feather-icons";
import { formatISO } from "date-fns";
import PageShell from "../../layouts/PageShell.astro";
import Header from "../../layouts/Header.astro";
import Body from "../../layouts/Body.astro";
import Footer from "../../layouts/Footer.astro";
import { getCollection } from "astro:content";
import { isBefore, isAfter, intlFormat } from "date-fns";

const allBlogPostsUnsorted = await getCollection("blog");

const allBlogPostsSorted = [...allBlogPostsUnsorted].sort((currentBlogPost, nextBlogPost) => {
	const currentBlogPostDate = currentBlogPost.data.date;
	const nextBlogPostDate = nextBlogPost.data.date;

	if (isBefore(currentBlogPostDate, nextBlogPostDate)) {
		return -1;
	}

	if (isAfter(currentBlogPostDate, nextBlogPostDate)) {
		return 1;
	}

	return 0;
});
---

<PageShell title="Blog â€” Christian Rackerseder">
	<Header withBottomBorder={true} />

	<Body>
		<main class="flex-grow flex-shrink-0 basis-auto">
			<h1
				class="flex gap-x-2 justify-center items-center mt-8 mb-2 text-2xl font-extrabold lg:items-end lg:text-4xl lg:leading-none text-dracula-cyan"
			>
				Blog
				<Fragment set:html={icons["book-open"]?.toSvg({ class: "text-dracula-light w-6 h-6 lg:w-9 lg:h-9" })} />
			</h1>
			<hr
				class="m-auto w-1/2 h-2 bg-gradient-to-br rounded-lg border-none bg-dracula-red from-yellow to-dracula-pink"
			/>
			<ul class="text-dracula-light">
				{
					allBlogPostsSorted.map((blogPost) => {
						return (
							<li>
								<article class="flex items-stretch my-6 mx-4 bg-gradient-to-br rounded-2xl sm:mx-auto sm:max-w-lg md:max-w-xl lg:max-w-2xl from-dracula to-dracula-cyan drop-shadow-lg">
									<a
										href={`/blog/${blogPost.slug}`}
										class="p-3 m-1 w-full rounded-2xl bg-dracula-dark hover:bg-dracula-darker-800"
									>
										<h2 class="mb-4 underline text-dracula-cyan underline-offset-2">
											{blogPost.data.title}
										</h2>
										<p class="">{blogPost.data.description}</p>
										<time
											datetime={formatISO(blogPost.data.date, { representation: "date" })}
											class="block mt-2 text-sm text-right text-dracula-pink"
										>
											{intlFormat(blogPost.data.date, {
												year: "numeric",
												month: "long",
												day: "numeric",
											})}
										</time>
									</a>
								</article>
							</li>
						);
					})
				}
			</ul>
		</main>
	</Body>

	<Footer />
</PageShell>
